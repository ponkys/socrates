// Mixins

// Spacing
@mixin spacing-creator-item($property, $name, $value, $device) {
	@if $device == mobile {
		.#{$name} { #{$property}: nth($value, 1);}
	}
	@else {
		.#{$name} { #{$property}: nth($value, 2);}
	}
}

// Parsing list
@mixin spacing-creator-factory($spacing-array, $device) {
	@each $spacing-item in $spacing-array {
		@include spacing-creator-item(nth($spacing-item, 1), nth($spacing-item, 2), nth($spacing-item, 3), $device)
	}
}

// Overlay stack
@each $level in 1, 2, 3, 4, 5 {
  .layer-#{$level} {
    z-index: $level * 10;
    -webkit-transform: translate(0,0);
    -moz-transform: translate(0,0);
    transform: translate(0,0);
    position: relative;
  }
}

// Ratio helpers
@mixin ratio($w, $h) {
  position: relative;
  display: block;
  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: percentage($h/$w);
  }
  &>.content {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
  }
}
@each $w, $h in (16: 9, 4: 3, 1: 1) {
  .ratio-#{$w}-#{$h} {
    @include ratio($w, $h);
  }
  .ratio-#{$w}-#{$h}-sm {
    @media (min-width: 320px) {
      @include ratio($w, $h);
    }
  }
  .ratio-#{$w}-#{$h}-md {
    @media (min-width: 768px) {
      @include ratio($w, $h);
    }
  }
  .ratio-#{$w}-#{$h}-lg {
    @media (min-width: 1280px) {
      @include ratio($w, $h);
    }
  }
}

// Flex order helpers
@mixin flex-order($order) {
  order: $order;
}
@each $br-name, $br-size in ($grid-breakpoints) {
  @media (min-width: $br-size) {
    @each $order in (1,2,3,4,5) {
      .flex-order-#{$br-name}-#{$order} {
        @include flex-order($order);
      }
    }
  }
}


// Text color + fill color for svg icons
@mixin text-fill-emphasis-variant($parent, $color, $fill-enabled: false) {
	#{$parent} {
		color: $color !important;
		svg {
			fill: $color;
		}
	}
	a#{$parent} {
		@include hover-focus {
			color: darken($color, 10%) !important;

			svg {
				fill: darken($color, 10%) !important;
			}
		}
	}
}
